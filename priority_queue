long long colosseum(int n,vector<int> arr) {
    priority_queue<int,vector<int>,greater<int>>st;
    vector<long long>prefix(3*n,-1e18),suffix(3*n,1e18);
    long long sum=0;
    for(int i=0;i<3*n;i++)
    {
         st.push(arr[i]) ;
        sum += arr[i] ;
        if(st.size() > n )
        {
            sum -= st.top() ;
            st.pop() ;
        }
        prefix[i]=sum;
    }
    priority_queue<int>pq;
    sum=0;
    for(int i=3*n-1;i>=0;i--)
    {
        
        pq.push(arr[i]) ;
        sum += arr[i] ;
        if(pq.size() > n )
        {
            sum -= pq.top() ;
            pq.pop() ;
        }
        suffix[i]=sum;
    }
    // for(int i=0;i<3*n;i++)
    //   cout<<prefix[i]<<" ";
    //   cout<<endl;
    //  for(int i=0;i<3*n;i++)
    //   cout<<suffix[i]<<" ";
    //   cout<<endl;
    long long ans=-1e18;
    for(int i=n;i<2*n;i++)
    {
        ans=max(ans,prefix[i-1]-suffix[i]);
    }
    return ans;
}
